import React from 'react';
import { Edit } from 'lucide-react';

const ScenarioDetails = ({ scenario }) => {
  if (!scenario) {
    return (
      <div className="bg-gray-800 rounded-lg p-6 w-full space-y-4">
        <div className="text-gray-400 text-center py-4">
          No scenario selected
        </div>
      </div>
    );
  }

  return (
    <div className="bg-gray-800 rounded-lg p-6 w-full space-y-4">
      {/* Header with Title and Edit Button */}
      <div className="flex justify-between items-center">
        <h2 className="text-xl font-semibold text-gray-100">{scenario.name}</h2>
        <button className="bg-blue-600 hover:bg-blue-700 text-white rounded-lg px-3 py-2 flex items-center space-x-2">
          <Edit className="w-5 h-5" />
          <span>Edit</span>
        </button>
      </div>

      {/* Description */}
      <div>
        <p className="text-gray-100">{scenario.description || 'No description available'}</p>
      </div>

      {/* Type Indicator */}
      <div>
        <div className="text-sm text-gray-400 mb-1">Type</div>
        <div className="flex items-center space-x-2">
          <div
            className={`px-2 py-1 rounded-full text-xs ${
              scenario.type === 'satellite_operations'
                ? 'bg-blue-500/10 text-blue-400'
                : scenario.type === 'training'
                ? 'bg-green-500/10 text-green-400'
                : 'bg-yellow-500/10 text-yellow-400'
            }`}
          >
            {scenario.type.replace('_', ' ')}
          </div>
        </div>
      </div>

      {/* Timeline/Stages */}
      <div>
        <div className="text-sm text-gray-400 mb-1">Scenario Timeline</div>
        <div className="space-y-3">
          {scenario.timeline.map((stage, index) => (
            <div key={index} className="bg-gray-700/50 rounded-lg p-3">
              <div className="flex items-start justify-between">
                <div className="text-gray-100 font-medium">{stage.milestone}</div>
                <div className="text-sm text-gray-400">
                  {stage.triggers[0]}
                </div>
              </div>
              <div className="mt-2">
                <div className="text-sm text-gray-400">Tasks:</div>
                <div className="ml-4 space-y-1">
                  {stage.tasks.map((task, taskIndex) => (
                    <div key={taskIndex} className="text-sm text-gray-300">
                      â€¢ {task.name}
                      {task.description && (
                        <div className="text-gray-400 text-xs ml-3">
                          {task.description}
                        </div>
                      )}
                    </div>
                  ))}
                </div>
              </div>
            </div>
          ))}
        </div>
      </div>
    </div>
  );
};

export default ScenarioDetails;
